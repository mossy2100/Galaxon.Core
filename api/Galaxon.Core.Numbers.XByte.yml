### YamlMime:ManagedReference
items:
- uid: Galaxon.Core.Numbers.XByte
  commentId: T:Galaxon.Core.Numbers.XByte
  id: XByte
  parent: Galaxon.Core.Numbers
  children:
  - Galaxon.Core.Numbers.XByte.Abs(System.SByte)
  langs:
  - csharp
  - vb
  name: XByte
  nameWithType: XByte
  fullName: Galaxon.Core.Numbers.XByte
  type: Class
  source:
    remote:
      path: Numbers/XByte.cs
      branch: main
      repo: git@github.com:mossy2100/Core.git
    id: XByte
    path: Numbers/XByte.cs
    startLine: 2
  assemblies:
  - Galaxon.Core.Numbers
  namespace: Galaxon.Core.Numbers
  syntax:
    content: 'public static class XByte : object'
    content.vb: >-
      Public Module XByte
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Galaxon.Core.Numbers.XByte.Abs(System.SByte)
  commentId: M:Galaxon.Core.Numbers.XByte.Abs(System.SByte)
  id: Abs(System.SByte)
  parent: Galaxon.Core.Numbers.XByte
  langs:
  - csharp
  - vb
  name: Abs(SByte)
  nameWithType: XByte.Abs(SByte)
  fullName: Galaxon.Core.Numbers.XByte.Abs(System.SByte)
  type: Method
  source:
    remote:
      path: Numbers/XByte.cs
      branch: main
      repo: git@github.com:mossy2100/Core.git
    id: Abs
    path: Numbers/XByte.cs
    startLine: 12
  assemblies:
  - Galaxon.Core.Numbers
  namespace: Galaxon.Core.Numbers
  summary: "\nReturn the absolute value of an sbyte as a byte.\nThis addresses an issue with sbyte.Abs(), which is that Abs(sbyte.MinValue) can&apos;t be\nexpressed as a sbyte, and so wrap-around occurs.\nUnsigned integer types don&apos;t have an Abs() method, so there&apos;s no collision.\n"
  example: []
  syntax:
    content: public static byte Abs(sbyte n)
    parameters:
    - id: n
      type: System.SByte
      description: A sbyte value.
    return:
      type: System.Byte
      description: The absolute value as a byte.
    content.vb: Public Shared Function Abs(n As SByte) As Byte
  overload: Galaxon.Core.Numbers.XByte.Abs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Galaxon.Core.Numbers
  commentId: N:Galaxon.Core.Numbers
  name: Galaxon.Core.Numbers
  nameWithType: Galaxon.Core.Numbers
  fullName: Galaxon.Core.Numbers
- uid: System.Object
  commentId: '!:System.Object'
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Galaxon.Core.Numbers.XByte.Abs*
  commentId: Overload:Galaxon.Core.Numbers.XByte.Abs
  name: Abs
  nameWithType: XByte.Abs
  fullName: Galaxon.Core.Numbers.XByte.Abs
- uid: System.SByte
  commentId: '!:System.SByte'
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
